import sensor,time,pyb,math
sensor.reset()  # Reset and initialize the sensor.
sensor.set_pixformat(sensor.RGB565)  # Set pixel format to RGB565 (or GRAYSCALE)
sensor.set_framesize(sensor.QVGA)  # Set frame size to QVGA (320x240)
sensor.set_vflip(True) # Flips the image vertically
sensor.set_hmirror(True) # Mirrors the image horizontally
sensor.set_auto_whitebal(False)
sensor.set_auto_gain(False)
sensor.skip_frames(time=2000)  # Wait for settings take effect.
clock=time.clock()
blockSizes=[#z,x,y
    (5,5,10),#red and green 10cm in actual equal to screen 0.058cm
    (200,20,100)#magenta
]
threshHold_red  =(0,39, 18, 38,-128, 23)
threshHold_green=(0,53,-28,-11,  12,127)
while True:
    clock.tick()
    img=sensor.snapshot()#size(x,y)=(320,240)
    red=img.find_blobs([threshHold_red],area_threshold=300,merge=False)
    green=img.find_blobs([threshHold_green],area_threshold=300,merge=False)
    seen=[0,0]#red,green
    if len(red)>=1:#see all red blocks
        nearestDistanceRed=[999999,0]
        count=0
        while count<len(red):
            blob=red[count]
            seen[0]=1
            img.draw_rectangle(blob[0:4],color=(255,0,0))
            #img.draw_cross(blob[5],blob[6],color=(255,0,0))
            aveHW=(blob[2]+blob[3])/2
            aveBlock=(blockSizes[0][1]+blockSizes[0][2])/2
            distanceRed=((aveBlock*290)/aveHW)-1
            if distanceRed<nearestDistanceRed[0]:
                nearestDistanceRed[0]=distanceRed
                nearestDistanceRed[1]=count
            count+=1
    if len(green)>=1:#see all green blocks
        nearestDistanceGreen=[999999,0]
        count=0
        while count<len(green):
            blob=green[count]
            seen[1]=1
            img.draw_rectangle(blob[0:4],color=(0,255,0))
            #img.draw_cross(blob[5],blob[6],color=(0,255,0))
            aveHW=(blob[2]+blob[3])/2
            aveBlock=(blockSizes[0][1]+blockSizes[0][2])/2
            distanceGreen=((aveBlock*290)/aveHW)-1
            if distanceGreen<nearestDistanceGreen[0]:
                nearestDistanceGreen[0]=distanceGreen
                nearestDistanceGreen[1]=count
            count+=1
    if seen!=[0,0]:
        color=""
        if seen==[1,1]:#see red and green
            if nearestDistanceRed[0]<nearestDistanceGreen[0]:
                print("red is closer than green")
                color="red"
                blob=red[nearestDistanceRed[1]]
                img.draw_circle(blob[5],blob[6],10,color=(0,0,255),fill=True)
            else:
                print("green is closer than red")
                color="green"
                blob=green[nearestDistanceGreen[1]]
                img.draw_circle(blob[5],blob[6],10,color=(0,0,255),fill=True)
        elif seen==[1,0]:
            print("only see red")
            color="red"
            blob=red[nearestDistanceRed[1]]
            img.draw_circle(blob[5],blob[6],10,color=(0,0,255),fill=True)
        elif seen==[0,1]:
            print("only see green")
            color="green"
            blob=green[nearestDistanceGreen[1]]
            img.draw_circle(blob[5],blob[6],10,color=(0,0,255),fill=True)